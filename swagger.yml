openapi: 3.0.0
info:
  title: "REST-Flask"
  description: "An API about people and notes"
  version: "1.0.0"

servers:
  - url: "/api"

paths:
  /people:
    get:
      operationId: "people.read_all"
      tags:
        - "People"
      summary: "Read the list of people"
      responses:
        "200":
          description: "Successfully read people list"
        "404":
          description: "No people found"
    post:
      operationId: "people.create"
      tags:
        - People
      summary: "Create a person"
      
      requestBody:
          description: "Person to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "person"
                $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: "Successfully created person"
    
  /people/{fname}:
    get:
      operationId: "people.read_one"
      tags:
        - People
      summary: "Read one person"
      parameters:
        - $ref: "#/components/parameters/fname"
      responses:
        "200":
          description: "Successfully read person"
        "404":
          description: "person not found"
    put:
      tags:
        - People
      operationId: "people.update"
      summary: "Update a person"
      parameters:
        - $ref: "#/components/parameters/fname"
      responses:
        "200":
          description: "Successfully updated person"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
    delete:
      tags:
        - People
      operationId: "people.delete"
      summary: "Delete a person"
      parameters:
        - $ref: "#/components/parameters/fname"
      responses:
        "204":
          description: "Successfully deleted person"

    

components:
  schemas:
    Person:
      type: "object"
      # required:
      #   - fname
      properties:
        fname:
          type: "string"
        lname:
          type: "string"

  parameters:
    fname:
      name: "fname"
      description: "First name of the person to get"
      in: path
      required: True
      schema:
        type: "string"

  